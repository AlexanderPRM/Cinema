version: '3.5'
services:
  billing_psql:
    image: postgres:13.0-alpine
    env_file:
      - "config.env"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - cinema
    restart: always

  db_migrations:
    build: components
    env_file:
      - config.env
    networks:
      - cinema
    depends_on:
      - billing_psql

  rabbitmq_billing:
    image: rabbitmq:3.10.6-management-alpine
    env_file:
      - config.env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    networks:
      - cinema
    healthcheck:
      test: rabbitmq-diagnostics -q ping && rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5673:5672
      - 15673:15672

  admin_api:
    build:
      context: components
      dockerfile: admin_api/Dockerfile
    env_file:
      - config.env
    restart: always
    networks:
      - cinema
    depends_on:
      - db_migrations
      - billing_psql

  scheduler:
    build:
      context: components
      dockerfile: scheduler/Dockerfile
    env_file:
      - config.env
    depends_on:
      - billing_psql
      - db_migrations
    networks:
      - cinema
    restart: always

  billing_redis:
    image: redis:7.0.9
    restart: always
    env_file:
      - config.env
    depends_on:
      - billing_psql
      - db_migrations
    networks:
      - cinema

  billing_api:
    build:
      context: components
      dockerfile: billing_api/Dockerfile
    env_file:
      - config.env
    restart: always
    networks:
      - cinema
    depends_on:
      - billing_psql
      - db_migrations
    
  payment_api:
    build:
      context: components
      dockerfile: payment_api/Dockerfile
    env_file:
      - config.env
    restart: always
    networks:
      - cinema
    depends_on:
      - billing_psql
      - db_migrations
      - rabbitmq_billing

  worker_auth:
    build:
      context: components
      dockerfile: worker/Dockerfile
    env_file:
      - config.env
    command: ["python", "src/auth_run.py"]
    restart: always
    networks:
     - cinema
    depends_on:
      rabbitmq_billing:
        condition: service_healthy

  worker_emails:
    build:
      context: components
      dockerfile: worker/Dockerfile
    env_file:
      - config.env
    command: ["python", "src/email_run.py"]
    restart: always
    networks:
     - cinema
    depends_on:
      rabbitmq_billing:
        condition: service_healthy
  
  nginx:
    image: nginx:1.22.1
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - billing_api
      - payment_api
      - admin_api
    networks:
      - cinema
    ports:
      - 90:80


networks:
  cinema:
    external:
      name: cinema
volumes:
    postgres_data:
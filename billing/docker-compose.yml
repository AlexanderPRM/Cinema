version: '3.5'
services:
  billing_psql:
    image: postgres:13.0-alpine
    env_file:
      - "config.env"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data_2:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    networks:
      - cinema
    restart: always

  rabbitmq_billing:
    container_name: rabbitmq
    image: rabbitmq:3.10.6-management-alpine
    env_file:
      - config.env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    networks:
      - cinema
    ports:
      - 5672:5672
      - 15672:15672

  admin_api:
    build: components/admin_api
    env_file:
      - config.env
    restart: always
    ports:
      - 8000:8000
    networks:
      - cinema

  scheduler:
    build: components/scheduler
    env_file:
      - config.env
    depends_on:
      - billing_psql
    networks:
      - cinema
    restart: always

  billing_redis:
    image: redis:7.0.9
    restart: always
    env_file:
      - config.env
    networks:
      - cinema


networks:
  cinema:
    external:
      name: cinema
volumes:
    postgres_data_2:
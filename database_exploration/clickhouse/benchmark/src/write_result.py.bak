import openpyxl
from openpyxl import load_workbook
from openpyxl.styles import Border, Side, Alignment, NamedStyle

from openpyxl.chart import LineChart, Reference
from datetime import date

class Excel_Writer():
    def __init__(self):
        self.workbook = openpyxl.Workbook()
        self.sheet = self.workbook.active
        self.sheet['A1'] = 'row_count'
        self.sheet['B1'] = 'batch_length'
        self.sheet['C1'] = 'insert_time'
        self.sheet['D1'] = 'rows per sec'
        self.sheet['E1'] = 'shard 1'
        self.sheet['F1'] = 'shard 2'
        self.sheet.column_dimensions['A'].adjust_column_width = True
        self.sheet.column_dimensions['B'].adjust_column_width = True
        self.sheet.column_dimensions['C'].adjust_column_width = True
        self.sheet.column_dimensions['D'].adjust_column_width = True
        self.sheet.column_dimensions['E'].adjust_column_width = True
        self.sheet.column_dimensions['F'].adjust_column_width = True
        border = Border(left=Side(style='thin'), right=Side(style='thin'), top=Side(style='thin'), bottom=Side(style='thin'))
        alignment = Alignment(horizontal='center', vertical='center')
        style = NamedStyle(name='header', border=border, alignment=alignment)
        self.sheet['A1'].style = style
        self.sheet['B1'].style = style
        self.sheet['C1'].style = style
        self.sheet['D1'].style = style
        self.sheet['E1'].style = style
        self.sheet['F1'].style = style
        self.workbook.save('./output/load_benchmark_results.xlsx')

    def write(self, row_count, batch_length, insert_time, speed, shard_1, shard_2):
        self.sheet.append([row_count, batch_length, insert_time, speed, shard_1, shard_2])
        self.test_chart()
        self.workbook.save('./output/load_benchmark_results.xlsx')

    def test_chart(self):
        # данные для построения диаграммы
        rows = [
            ['Date', 'Batch 1', 'Batch 2', 'Batch 3'],
            [date(2015,9, 1), 40, 30, 25],
            [date(2015,9, 2), 40, 25, 30],
            [date(2015,9, 3), 50, 30, 45],
            [date(2015,9, 4), 30, 25, 40],
            [date(2015,9, 5), 25, 35, 30],
            [date(2015,9, 6), 20, 40, 35],
        ]
        for row in rows:
            self.sheet.append(row)

        # ДИАГРАММА №1
        # создаем объект диаграммы
        chart1 = LineChart()
        # заголовок диаграммы
        chart1.title = "Линейная диаграмма"
        # установим цветовую схему диаграммы
        chart1.style = 13
        # подпись оси `y`
        chart1.y_axis.title = 'Размер'
        # показывать данные на оси (для LibreOffice Calc)
        chart1.y_axis.delete = False
        # подпись оси `x`
        chart1.x_axis.title = 'Номер теста'
        chart1.x_axis.delete = False
        # выберем 4 столбца с данными для оси `y` 
        # в итоге получим 4 графика
        data = Reference(self.sheet, min_col=2, max_col=4, min_row=1, max_row=7)
        # добавляем данные в объект диаграммы
        chart1.add_data(data, titles_from_data=True)
        # ТЕПЕРЬ ЗАДАДИМ СТИЛЬ ЛИНИЙ 
        # ЛИНИЯ С ДАННЫМИ ИЗ 1 СТОЛБЦА ДАННЫХ
        line1 = chart1.series[0]
        # символ маркера для текущего значения
        line1.marker.symbol = "x"
        # цвет заливки маркера
        line1.marker.graphicalProperties.solidFill = "FF0000"
        line1.marker.graphicalProperties.line.solidFill = "FF0000"
        # не заливаем линию между маркерами (прозрачная)
        line1.graphicalProperties.line.noFill = True
        # ЛИНИЯ С ДАННЫМИ ИЗ 2 СТОЛБЦА ДАННЫХ
        line2 = chart1.series[1]
        # цвет заливки линии графика
        line2.graphicalProperties.line.solidFill = "00AAAA"
        # делаем линию пунктирной
        line2.graphicalProperties.line.dashStyle = "sysDot"
        # ширина указывается в EMU
        line2.graphicalProperties.line.width = 100050
        # ЛИНИЯ С ДАННЫМИ ИЗ 3 СТОЛБЦА ДАННЫХ
        line3 = chart1.series[2]
        # символ маркера для текущего значения
        line3.marker.symbol = "triangle"
        # покрасим маркер в другой цвет
        line1.marker.graphicalProperties.solidFill = "FF0000"
        line3.marker.graphicalProperties.line.solidFill = "0000FF"
        # делаем линию гладкой
        line3.smooth = True
        # добавим диаграмму на лист, в ячейку "A10"
        self.sheet.add_chart(chart1, "A10")


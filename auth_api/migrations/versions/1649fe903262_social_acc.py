"""social_acc

Revision ID: 1649fe903262
Revises: c943dddc8381
Create Date: 2023-05-03 12:57:57.461175

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "1649fe903262"
down_revision = "c943dddc8381"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "social_account",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("social_id", sa.Text(), nullable=False),
        sa.Column("social_name", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("social_id", "social_name", name="social_pk"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users_service", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="unique")

    with op.batch_alter_table("users_roles", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="unique")

    with op.batch_alter_table("users_login_history", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="unique")
        batch_op.drop_constraint(None, type_="unique")

    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="unique")

    op.create_table(
        "auth_history_unknown",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_agent", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "authentication_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("device_type", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="users_login_history_user_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", "device_type", name="auth_history_unknown_pkey"),
    )
    op.create_table(
        "auth_history_bot",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_agent", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "authentication_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("device_type", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="users_login_history_user_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", "device_type", name="auth_history_bot_pkey"),
    )
    op.create_table(
        "auth_history_mobile",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_agent", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "authentication_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("device_type", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="users_login_history_user_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", "device_type", name="auth_history_mobile_pkey"),
    )
    op.create_table(
        "auth_history_desktop",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_agent", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "authentication_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("device_type", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="users_login_history_user_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", "device_type", name="auth_history_desktop_pkey"),
    )
    op.create_table(
        "auth_history_tablet",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_agent", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "authentication_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("device_type", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="users_login_history_user_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", "device_type", name="auth_history_tablet_pkey"),
    )
    op.drop_table("social_account")
    # ### end Alembic commands ###
